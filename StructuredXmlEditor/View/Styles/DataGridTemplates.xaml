<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="clr-namespace:StructuredXmlEditor.Data"
	xmlns:v="clr-namespace:StructuredXmlEditor.View">

	<DataTemplate
		DataType="{x:Type d:StringItem}">
		<TextBox
			VerticalAlignment="Center"
			Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:MultilineStringItem}">
		<v:MultilineTextEditor
			VerticalAlignment="Stretch"
			VerticalContentAlignment="Stretch"
			Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:TreeItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>

			<Button
				Background="Transparent"
				BorderBrush="Transparent"
				ToolTip="Add new item"
				Command="{Binding AddCMD}">
				<Image
					Source="/Resources/Add.png"
					RenderOptions.BitmapScalingMode="NearestNeighbor"
					Height="16"
					Width="16" />
			</Button>

			<TextBox
				Grid.Column="1"
				Visibility="{Binding IsCollectionChild, Converter={v:ValueTypeConverter}}"
				VerticalAlignment="Center"
				Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
		</Grid>
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:FileItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>
			<Button
				Background="Transparent"
				BorderBrush="Transparent"
				ToolTip="Browse"
				Command="{Binding BrowseCMD}">
				<Image
					Source="/Resources/Open.png"
					Width="16"
					Height="16" />
			</Button>
			<TextBox
				Grid.Column="1"
				VerticalAlignment="Center"
				Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
		</Grid>
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:PairItem}">
		<TextBlock
			VerticalAlignment="Center"
			Text="{Binding Description}" />
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:NumberItem}">
		<v:NumericTextBox
			MinValue="{Binding Definition.MinValue}"
			MaxValue="{Binding Definition.MaxValue}"
			UseIntegers="{Binding Definition.UseIntegers}"
			VerticalAlignment="Center"
			Value="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:BooleanItem}">
		<CheckBox
			VerticalAlignment="Center"
			IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:EnumItem}">
		<ComboBox
			VerticalAlignment="Center"
			ItemsSource="{Binding Definition.EnumValues}"
			SelectedItem="{Binding Value}" />
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:ColourItem}">
		<Grid>
			<ToggleButton
				x:Name="ColourPopupToggle"
				Style="{StaticResource EmptyToggleButtonStyle}"
				IsHitTestVisible="{Binding ElementName=ColourPopup, Path=IsOpen, Converter={v:ValueTypeConverter}, ConverterParameter=Not}">
				<Grid>
					<Border
						Background="{StaticResource CheckerBrush}" />
					<Border
						Background="{Binding Value, Converter={v:ValueTypeConverter}}" />
				</Grid>
			</ToggleButton>
			<Popup
				x:Name="ColourPopup"
				StaysOpen="False"
				AllowsTransparency="True"
				Focusable="False"
				HorizontalOffset="1"
				VerticalOffset="1"
				PopupAnimation="Slide"
				IsOpen="{Binding ElementName=ColourPopupToggle, Path=IsChecked, Mode=TwoWay}"
				PlacementTarget="{Binding ElementName=ColourPopupToggle}"
				Placement="Mouse">
				<Border
					BorderThickness="1"
					BorderBrush="{StaticResource SelectionBorderBrush}"
					Background="{StaticResource BackgroundDarkBrush}">
					<Grid>
						<v:ColorCanvas
							Background="Transparent"
							UsingAlphaChannel="{Binding Definition.HasAlpha}"
							VerticalAlignment="Center"
							SelectedColor="{Binding Value, UpdateSourceTrigger=PropertyChanged, Delay=500}" />
					</Grid>
				</Border>
			</Popup>
		</Grid>
		
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:StructItem}">
		<Grid
			VerticalAlignment="Center">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>

			<Button
				VerticalAlignment="Center"
				Background="Transparent"
				BorderBrush="Transparent"
				ToolTip="Clear"
				Visibility="{Binding ShowClearButton, Converter={v:ValueTypeConverter}}"
				Command="{Binding ClearCMD}">
				<Image
					Source="/Resources/Remove.png"
					RenderOptions.BitmapScalingMode="NearestNeighbor"
					Height="16"
					Width="16" />
			</Button>
			<Button
				VerticalAlignment="Center"
				Background="Transparent"
				BorderBrush="Transparent"
				ToolTip="Create"
				Visibility="{Binding HasContent, Converter={v:ValueTypeConverter}, ConverterParameter=Not}"
				Command="{Binding CreateCMD}">
				<Image
					Source="/Resources/Add.png"
					RenderOptions.BitmapScalingMode="NearestNeighbor"
					Height="16"
					Width="16" />
			</Button>

			<TextBlock
				Grid.Column="1"
				TextTrimming="WordEllipsis"
				VerticalAlignment="Center"
				Text="{Binding Description}" />

		</Grid>
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:CollectionItem}">
		<Grid
			VerticalAlignment="Center">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>

			<Button
				VerticalAlignment="Center"
				Background="Transparent"
				BorderBrush="Transparent"
				ToolTip="Add new item"
				Command="{Binding AddCMD}"
				IsEnabled="{Binding IsAtMax, Converter={v:ValueTypeConverter}, ConverterParameter=Not}">
				<Image
					Source="/Resources/Add.png"
					RenderOptions.BitmapScalingMode="NearestNeighbor"
					Height="16"
					Width="16" />
			</Button>

			<TextBlock
				VerticalAlignment="Center"
				Grid.Column="1"
				TextTrimming="WordEllipsis"
				Text="{Binding Description}" />

		</Grid>
	</DataTemplate>

	<DataTemplate
		DataType="{x:Type d:CollectionChildItem}">
		<ContentPresenter
			VerticalAlignment="Center"
			Content="{Binding WrappedItem}" />
	</DataTemplate>

</ResourceDictionary>